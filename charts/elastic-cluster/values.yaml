# ----
elasticsearch:
  name: "elasticsearch"
  version: 7.14.0
  nodeSets:
    - name: nset1
      plugins: []
      count: 1
      mmap:
        vm_max_map_count: 262144
        enabled: false
      roles:
        - "master"
        - "data"
        - "ingest"
      limits:
        cpu: 1
        memory: 2Gi
      heapSize: 1200m  # Use [m for Megabytes, g for gigabytes]
      volumeClaims:
        enabled: true
        class: standard
        size: 512Mi
      config: {}

  # Annotations for Elasticsearch Pods, used by Cloud authenticators
  # like Kube2IAM
  podAnnotations: {}
  #  iam.amazonaws.com/role: es-cluster

  # This service account will be mount in all elasticsearch pods
  serviceAccount:
      # Specifies whether a service account should be created
    create: true
  #  name: ""
  #  annotations: {}
  automountServiceAccountToken: true

  service:
    enabled: true
    type: ClusterIP
    # name: elastisearch
  ingress:
    enabled: false
    annotations:
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#backend-protocol
    # https://stackoverflow.com/questions/54459015/how-to-configure-ingress-to-direct-traffic-to-an-https-backend-using-https
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # For Traeffik see: https://doc.traefik.io/traefik/v2.3/routing/providers/kubernetes-ingress/#communication-between-traefik-and-pods
    # # If 'hosts' is commented out, default ingress is created
    # hosts:
    # - name: elasticsearch.bluebaron.local
    #   path: "/"

    # # tls is handled automatically if 'tls' is empty
    # tls: []

# ----
kibana:
  name: "kibana"
  version: 7.14.0
  # To increase "count" - 'xpack.encryptedSavedObjects.encryptionKey' needs to be set
  count: 1
  encryptionKey:
    enabled: True
    # 'xpack.encryptedSavedObjects.encryptionKey' value:
    value: "" # If blank, a random key will be generated
  limits:
    cpu: 1 
    memory: 1Gi
  config: {}
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # # If 'hosts' is commented out, default ingress is created
    # hosts:
    # - name: kibana.bluebaron.local
    #   path: "/"

    # # tls is handled automatically if 'tls' is empty
    # tls: []

  # Annotations for Kibana Pods, used by Cloud authenticators
  # like Kube2IAM
  podAnnotations: {}
  #  iam.amazonaws.com/role: es-cluster


  # This service account will be mount in all kibana pods
  serviceAccount:
      # Specifies whether a service account should be created
    create: true
  #  name: ""
  #  annotations: {}
  automountServiceAccountToken: true

# ----
fleet:
  enabled: true
  name: "fleet"
  version: 7.14.0
  count: 1
  limits:
    cpu: 0.5
    memory: 512Mb
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # # If 'hosts' is commented out, default ingress is created
    # hosts:
    # - name: fleet.bluebaron.local
    #   path: "/"

    # # tls is handled automatically if 'tls' is empty
    # tls: []

  # Annotations for Fleet Pods, used by Cloud authenticators
  # like Kube2IAM
  podAnnotations: {}
  #  iam.amazonaws.com/role: es-cluster


  # This service account will be mount in all fleet pods
  serviceAccount:
      # Specifies whether a service account should be created
    create: true
  #  name: ""
  #  annotations: {}
  # automountServiceAccountToken: true


